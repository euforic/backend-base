// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"github.com/euforic/backend-base/pkg/gqltypes"
)

type CreateTodoInput struct {
	Title  string `json:"title"`
	Body   string `json:"body"`
	Author string `json:"author"`
}

type OffsetPageInfo struct {
	TotalResults   int  `json:"totalResults"`
	Limit          int  `json:"limit"`
	Offset         int  `json:"offset"`
	NextOffset     *int `json:"nextOffset"`
	PreviousOffset *int `json:"previousOffset"`
}

type Todo struct {
	ID        string             `json:"id"`
	Title     string             `json:"title"`
	Body      string             `json:"body"`
	Author    string             `json:"author"`
	IsDone    bool               `json:"isDone"`
	CreatedAt gqltypes.DateTime  `json:"createdAt"`
	UpdatedAt gqltypes.DateTime  `json:"updatedAt"`
	DeletedAt *gqltypes.DateTime `json:"deletedAt"`
}

type TodosFilter struct {
	Done *bool `json:"done"`
}

type TodosPayload struct {
	Nodes          []*Todo         `json:"Nodes"`
	OffsetPageInfo *OffsetPageInfo `json:"OffsetPageInfo"`
}

type UpdateTodoInput struct {
	ID     string  `json:"id"`
	Title  *string `json:"title"`
	Body   *string `json:"body"`
	Author *string `json:"author"`
	IsDone *bool   `json:"isDone"`
}
